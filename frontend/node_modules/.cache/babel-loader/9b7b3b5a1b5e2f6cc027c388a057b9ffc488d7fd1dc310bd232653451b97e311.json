{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  //Загрузка информации о пользователе\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkAnswer);\n  }\n\n  //Загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkAnswer);\n  }\n\n  //Обновление профиля пользователя\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkAnswer);\n  }\n\n  //Добавление новой карточки\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkAnswer);\n  }\n\n  //Удаление карточки\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkAnswer);\n  }\n  changeLikeCardStatus(id, isLiked) {\n    return fetch();\n  }\n\n  //Отображение количества лайков\n  putTheNumberOfLikes(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkAnswer);\n  }\n\n  //Удаление количества лайков\n  deleteTheNumberOfLikes(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkAnswer);\n  }\n\n  //Обновление аватара пользователя\n  updateUserAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkAnswer);\n  }\n\n  //Проверка вариантов ответа\n  _checkAnswer(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}, ${res.statusText}`);\n    }\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-71',\n  headers: {\n    authorization: 'f5593e6a-e81b-4046-bd40-347703da0d21',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","getUserInfo","fetch","then","_checkAnswer","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addNewCard","link","deleteCard","id","changeLikeCardStatus","isLiked","putTheNumberOfLikes","deleteTheNumberOfLikes","updateUserAvatar","avatar","res","ok","json","Promise","reject","status","statusText","api","authorization"],"sources":["C:/Users/Mavrin/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  //Загрузка информации о пользователе\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Загрузка карточек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Обновление профиля пользователя\r\n  editProfile(name, about) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ name, about })\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Добавление новой карточки\r\n  addNewCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ name, link })\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Удаление карточки\r\n  deleteCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n    return fetch()\r\n  }\r\n\r\n  //Отображение количества лайков\r\n  putTheNumberOfLikes(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Удаление количества лайков\r\n  deleteTheNumberOfLikes(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Обновление аватара пользователя\r\n  updateUserAvatar(avatar) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ avatar })\r\n    })\r\n      .then(this._checkAnswer);\r\n  }\r\n\r\n  //Проверка вариантов ответа\r\n  _checkAnswer(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}, ${res.statusText}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-71',\r\n  headers: {\r\n    authorization: 'f5593e6a-e81b-4046-bd40-347703da0d21',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport { api };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}